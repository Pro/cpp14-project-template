language: cpp

sudo: required

matrix:
  include:
    - os: linux
      compiler: gcc
      before_install:
        - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      addons:
        coverity_scan:
          project:
            name: "arnavb/cpp14-project-template"
            description: "A cross-platform C++14 project template"
            notification_email: arnavborborah11@gmail.com
            build_command_prepend: "mkdir -p build && cd build && cmake -DCMAKE_CXX_COMPILER=g++-5 .."
            build_command: "make"
            branch_pattern: coverity_scan
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
      before_script: echo "Coverity Scan"
      script: echo "Coverity Scan"
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
            - valgrind
      env:
        - MATRIX_EVAL="COMPILER=g++-5 && BUILD_TYPE=Debug"
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
      env:
        - MATRIX_EVAL="COMPILER=g++-5 && BUILD_TYPE=Release"
    - os: osx
      osx_image: xcode9.2 
      compiler: clang
      env:
        - MATRIX_EVAL="COMPILER=clang++ && BUILD_TYPE=Debug"
    - os: osx
      osx_image: xcode9.2 
      compiler: clang
      env:
        - MATRIX_EVAL="COMPILER=clang++ && BUILD_TYPE=Release"

before_install:
  - eval "${MATRIX_EVAL}"

before_script:
  - mkdir -p build && cd build
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=$COMPILER -DBUILD_TESTS=ON ..

script:
  - cmake --build . # Build the code
  - |
    if [ "$BUILD_TYPE" == "Debug" ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then # Run tests
      ctest -T memcheck # Check for memory leaks using Valgrind
    else
      ctest
    fi
  - sudo make install # Install the necessary files
