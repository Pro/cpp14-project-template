language: cpp

sudo: required

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "EnRHAVyzNOTNiw/PFcA/EDiityFknkYbnvAW0ficILhvnz5PVmDsp6PAXajmmNmkwj8V0WVBhfAdh16UlVa1zNuG/Ys4P8wugQqHDrAhaAepc1Yp3Lq5gjnz9Lc1CH2Nwlb28LwjoMqNhToFYV5BeC2f27JNjcOSsCOq5C4oTmDwXLxYuwUU6/YGxhdhS8CSazhnYud7bDKhqJXPagRkP9fVpik8c+b5OQlgNASfPz/9ieSRR9tsrnHkOv5vj/7HrMsMZhiR+wwwiuvg3FYvycuSYczXNTMz7wF1AAgMxm5+97HXEqqR4KqYny/9p21bbr5xpb3P8fG5/KVQKD7FS/k9E2ENIFathnzVEb0Y/rbaTAD439WW8ttNAMmGedDOgKACbVX2WgnKlsul8d+eGEA7cmwoi4xZEh2XASUEIZBOxMpWGGRQe1Bwv8eyAuxF7zDXPopTfqTxaIcTNYGZFTqc/tKBwfpY0ewTkCL3mFqh0U5FzIzIGRP58ph1/oynQ9DrE2lJWG8V1FsF04ruokJaNxCcMD/OfsTbiM1ApQVABr9yKDhaNecVNriwRjBWYMQ/Ao6JWnHZTxg7oOelK9DoeG+HYtJQGrE+zibuaQMhjc7dcqXsXd+b+Dmyix/MraqbKGhxnV8Qh37nngKSN98euFx/6Fs/oj6wOh/MtaE="

matrix:
  include:
    - os: linux
      compiler: gcc
      before_install:
        - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
        coverity_scan:
          project:
            name: "arnavb/cpp14-project-template"
            description: "A cross-platform C++14 project template"
          notification_email: arnavborborah11@gmail.com
          build_command_prepend: "mkdir -p build && cd build && cmake -DCMAKE_CXX_COMPILER=g++-5 .."
          build_command: "make"
          branch_pattern: coverity_scan
      before_script: echo "Coverity Scan"
      script: echo "Coverity Scan"
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
            - valgrind
      env:
        - MATRIX_EVAL="COMPILER=g++-5 && BUILD_TYPE=Debug"
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
      env:
        - MATRIX_EVAL="COMPILER=g++-5 && BUILD_TYPE=Release"
    - os: osx
      osx_image: xcode9.2 
      compiler: clang
      env:
        - MATRIX_EVAL="COMPILER=clang++ && BUILD_TYPE=Debug"
    - os: osx
      osx_image: xcode9.2 
      compiler: clang
      env:
        - MATRIX_EVAL="COMPILER=clang++ && BUILD_TYPE=Release"

before_install:
  - eval "${MATRIX_EVAL}"

before_script:
  - mkdir -p build && cd build
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=$COMPILER -DBUILD_TESTS=ON ..

script:
  - cmake --build . # Build the code
  - |
    if [ "$BUILD_TYPE" == "Debug" ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then # Run tests
      ctest -T memcheck # Check for memory leaks using Valgrind
    else
      ctest
    fi
  - sudo make install # Install the necessary files
